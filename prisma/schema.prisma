// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Categories Table
model Category {
  id          String   @id @default(uuid())
  name        String
  nameAr      String?  @map("name_ar")
  slug        String   @unique
  type        String   // 'human' or 'veterinary'
  icon        String?
  description String?
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("categories")
}

// Human Products Table
model HumanProduct {
  id                  String   @id @default(uuid())
  name                String
  genericName         String   @map("generic_name")
  strength            String
  dosageForm          String   @map("dosage_form")
  indication          String
  packSize            String?  @map("pack_size")
  registrationNumber  String?  @map("registration_number")
  category            String
  imageUrl            String?  @map("image_url")
  price               Float?
  isActive            Boolean  @default(true) @map("is_active")
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")

  @@map("human_products")
}

// Veterinary Products Table
model VeterinaryProduct {
  id                  String   @id @default(uuid())
  name                String
  genericName         String   @map("generic_name")
  strength            String
  dosageForm          String   @map("dosage_form")
  indication          String
  species             String
  withdrawalPeriod    String?  @map("withdrawal_period")
  packSize            String?  @map("pack_size")
  registrationNumber  String?  @map("registration_number")
  category            String
  imageUrl            String?  @map("image_url")
  price               Float?
  isActive            Boolean  @default(true) @map("is_active")
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")

  @@map("veterinary_products")
}

// Media Posts Table (News & Events)
model MediaPost {
  id          String   @id @default(uuid())
  title       String
  titleAr     String?  @map("title_ar")
  content     String   // Main text content
  contentAr   String?  @map("content_ar")
  type        String   // 'news' or 'event'
  mediaType   String?  @map("media_type") // 'image' or 'video'
  mediaUrl    String?  @map("media_url")  // URL to image or video
  isActive    Boolean  @default(true) @map("is_active")
  publishDate DateTime @default(now()) @map("publish_date")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("media_posts")
}

// Jobs Table
model Job {
  id              String   @id @default(uuid())
  title           String
  titleAr         String?  @map("title_ar")
  department      String
  location        String
  jobType         String   @map("job_type") // 'full-time', 'part-time', 'contract'
  workingHours    String   @map("working_hours")
  description     String
  descriptionAr   String?  @map("description_ar")
  requirements    String
  requirementsAr  String?  @map("requirements_ar")
  isActive        Boolean  @default(true) @map("is_active")
  publishDate     DateTime @default(now()) @map("publish_date")
  expiryDate      DateTime? @map("expiry_date")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  
  applications    JobApplication[]

  @@map("jobs")
}

// Job Applications Table
model JobApplication {
  id              String   @id @default(uuid())
  jobId           String?  @map("job_id")
  fullName        String   @map("full_name")
  email           String
  phone           String
  cvUrl           String   @map("cv_url")
  coverLetter     String?  @map("cover_letter")
  status          String   @default("pending") // 'pending', 'reviewed', 'shortlisted', 'rejected'
  createdAt       DateTime @default(now()) @map("created_at")
  
  job             Job?     @relation(fields: [jobId], references: [id], onDelete: SetNull)

  @@map("job_applications")
}
